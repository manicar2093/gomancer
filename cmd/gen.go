package cmd

import (
	"github.com/charmbracelet/log"
	"github.com/manicar2093/gomancer/controllers/echoimpl"
	"github.com/manicar2093/gomancer/deps"
	"github.com/manicar2093/gomancer/domain"
	"github.com/manicar2093/gomancer/migrations/prismaimpl"
	"github.com/manicar2093/gomancer/models"
	"github.com/manicar2093/gomancer/parser"
	"github.com/manicar2093/gomancer/repositories/gormimpl"
	"github.com/spf13/cobra"
	"os"
)

var GenCmd = &cobra.Command{
	Use:   "gen model_name model_attributes...",
	Short: "Generate a new model, repository and controller",
	Long: `WARNING: It is necessary to use this command into a golang module initiated by gomancer new command

Generate a new model, repository and controller. It takes your entity name as first argument, next input are all model attributes with following format:

name:type:<optional>

Supported types:

	- int
	- int8
	- int16
	- int32
	- int64
	- float32
	- float64
	- string
	- bool
	- time
	- decimal
	- uuid
	- enum (separated by slash /)

By default all migrations are generated with an autoincrement id. Other option is to generate it using a UUID using --pk-uuid flag.
`,
	Example: `gomancer gen Client name:string dob:time:optional #Autoincrement pk
gomancer gen Client name:string dob:time:optional --pk-uuid #Autogenerated UUID pk
gomancer gen Client name:string dob:time:optional status:enum/active/deactivated/pending --pk-uuid #With enum
`,
	Args: cobra.MinimumNArgs(1),
	Run: func(cmd *cobra.Command, args []string) {
		log.Debug("Command input", "args", args)
		moduleName, err := domain.GetGoModName()
		if err != nil {
			if os.IsNotExist(err) {
				log.Error("you cannot use this command outside a not initiated go project. Use new command first")
				return
			}
		}
		input, errDetails, hasErr := parser.ParseArgs(args, moduleName, IsPkUuid)
		if hasErr {
			log.Error("Parsing errors occured:")
			for _, item := range errDetails {
				log.Error(item)
			}
			return
		}
		log.Debug("input generated", "input", input)

		goDeps, inCreation := deps.Init(input.ModuleInfo.Name), deps.InCreation(input.ModuleInfo.Name, input.PackageEntityName)

		if err := models.GenerateModel(input, goDeps); err != nil {
			log.Error(err)
			return
		}
		if err := gormimpl.GenerateRepository(input, goDeps); err != nil {
			log.Error(err)
			return
		}
		if err := echoimpl.GenerateRestController(input, goDeps, inCreation); err != nil {
			log.Error(err)
			return
		}
		if err := prismaimpl.GenerateMigration(input); err != nil {
			log.Error(err)
			return
		}

		log.Infof(`
‚úÖ Ready!
üèÅ Next steps:

	‚û°Ô∏è Go to cmd/api/main.go
	‚û°Ô∏è Add dbConn = connections.GetGormConnection(conf.DatabaseConnectionConfig)
	‚û°Ô∏è Add repository initialization
	‚û°Ô∏è Add controller initialization
	‚û°Ô∏è Register controller
	‚û°Ô∏è Run 'go mod download' to install deps
	‚û°Ô∏è Enjoy! üòé
`)
	},
}
