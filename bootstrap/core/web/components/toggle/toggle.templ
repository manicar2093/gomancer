// templui component toggle - version: v0.74.2 installed by templui v0.74.2
package toggle

import "github.com/manicar2093/gomancer/bootstrap/core/web/utils"

type Props struct {
	ID         string
	Class      string
	Attributes templ.Attributes
	Name       string
	Disabled   bool
	Checked    bool
}

templ Toggle(props ...Props) {
	{{ var p Props }}
	if len(props) > 0 {
		{{ p = props[0] }}
	}
	if p.ID == "" {
		{{ p.ID = utils.RandomID() }}
	}
	<label
		for={ p.ID }
		class={ utils.TwMerge(
            "inline-flex cursor-pointer items-center gap-2",
            utils.If(p.Disabled, "cursor-not-allowed"),
        ) }
	>
		<input
			x-ref={ p.ID }
			id={ p.ID }
			type="checkbox"
			checked?={ p.Checked }
			disabled?={ p.Disabled }
			class="peer hidden"
			role="switch"
			{ p.Attributes... }
		/>
		<input
            type="hidden"
            id={"checkbox-hidden-value-for-"+p.ID}
            if p.Name != "" {
                name={ p.Name }
            }
            value={ p.Checked }
        />
		<div
			class={
				utils.TwMerge(
					"relative h-6 w-10",
					"after:absolute after:left-0.5 after:top-0.5",
					"after:h-5 after:w-5",
					"rounded-full bg-neutral-200",
					"after:rounded-full after:bg-muted-foreground",
					"after:content-['']",
					"after:transition-all",
					"peer-checked:bg-primary",
					"peer-checked:after:translate-x-[16px]",
					"peer-checked:after:bg-secondary",
					"peer-disabled:opacity-50",
					p.Class,
				),
			}
			aria-hidden="true"
		></div>
	</label>
}

templ Script() {
    <script>
        (function(){
            const checkboxes = document.querySelectorAll("input[type=checkbox]");
            checkboxes.forEach(item => {
                item.addEventListener("change", e => {
                    const isChecked = e.target.checked;
                    const checkboxId = e.target.id;
                    const hiddenValueSrc = document.querySelector(`#checkbox-hidden-value-for-${checkboxId}`);
                    hiddenValueSrc.value = isChecked;
                })
            })
        })()
    </script>
}
