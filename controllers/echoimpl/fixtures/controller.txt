// Code generated by gomancer
package controllers

import (
	"net/http"

	echo "github.com/labstack/echo/v4"
	core "github.com/user/project_name/core"
	commonreq "github.com/user/project_name/core/commonreq"
	models "github.com/user/project_name/internal/domain/models"
	posttest "github.com/user/project_name/internal/posttest"
)

type PostTestController struct {
	postTestRepository *posttest.PostTestRepository
}

func NewPostTestController(postTestRepository *posttest.PostTestRepository) *PostTestController {
	return &PostTestController{
		postTestRepository: postTestRepository,
	}
}

func (c *PostTestController) SetUpRoutes(group *echo.Group) {
	postTestGroup := group.Group("/post_test")

	postTestGroup.GET("", c.GetAllPaginatedHandler)
	postTestGroup.POST("", c.SaveHandler)
	postTestGroup.GET("/:id", c.GetByIdHandler)
	postTestGroup.PATCH("/:id", c.SaveHandler)
	postTestGroup.PUT("/:id", c.PartialUpdateByIdHandler)
	postTestGroup.DELETE("/:id", c.DeleteByIdHandler)
}

func (c *PostTestController) SaveHandler(ctx echo.Context) error {
	var req = models.PostTest{}
	if err := core.BindAndValidate(ctx, &req); err != nil {
		return err
	}

	if err := c.postTestRepository.Save(&req); err != nil {
		return err
	}

	return ctx.JSON(http.StatusCreated, &req)
}

func (c *PostTestController) GetByIdHandler(ctx echo.Context) error {
	req := commonreq.GetByIdUUID{}
	if err := core.BindAndValidate(ctx, &req); err != nil {
		return err
	}

	res, err := c.postTestRepository.GetById(req.Id)
	if err != nil {
		return err
	}

	return ctx.JSON(http.StatusOK, &res)
}

func (c *PostTestController) GetAllPaginatedHandler(ctx echo.Context) error {
	req := commonreq.PageData{}
	if err := core.BindAndValidate(ctx, &req); err != nil {
		return err
	}

	res, err := c.postTestRepository.GetAllPaginated(req.PageNumber, req.PageSize)
	if err != nil {
		return err
	}

	return ctx.JSON(http.StatusOK, &res)
}

func (c *PostTestController) PartialUpdateByIdHandler(ctx echo.Context) error {
	req := posttest.PartialUpdateByIdInput{}
	if err := core.BindAndValidate(ctx, &req); err != nil {
		return err
	}
	res, err := c.postTestRepository.PartialUpdateById(req)
	if err != nil {
		return err
	}

	return ctx.JSON(http.StatusOK, &res)
}

func (c *PostTestController) DeleteByIdHandler(ctx echo.Context) error {
	req := commonreq.GetByIdUUID{}
	if err := core.BindAndValidate(ctx, &req); err != nil {
		return err
	}
	if err := c.postTestRepository.DeleteById(req.Id); err != nil {
		return err
	}

	return ctx.NoContent(http.StatusOK)
}
