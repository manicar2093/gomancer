{{ printf  "{{ %sKey := \"%s\" }}" .CamelCase .SnakeCase }}
{{ printf "{{ has%sErrors := errors.HasField(%sKey) }}" .PascalCase .CamelCase}}
@form.Item(form.ItemProps{}) {
	@label.Label(label.Props{
		For: {{ .CamelCase }}Key,
	}) {
		{{ .PascalCase }}
	}
	@input.Input(input.Props{
		ID:       {{ .CamelCase }}Key,
		Name:     {{ .CamelCase }}Key,
		Type:     input.TypeNumber,
		Value:    {{ GenerateFormValue . }},
		HasError: has{{ .PascalCase }}Errors,
		{{- if not .IsOptional }}
		Required: true,
		{{- end }}
		Attributes: map[string]any{
			"step": "0.01",
		},
	})
	@form.Description() {
		Enter {{ .PascalCase }}
	}
	@formerrors.FormErrors(formerrors.FormErrorsProps{
		HasErrors: has{{ .PascalCase }}Errors,
		Errors: errors,
		FormItemKey: {{ .CamelCase }}Key,
	})
}
